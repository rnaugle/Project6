Program(
 AbstractList(
  ClassDecl(LinkedList null
   AbstractList()
   AbstractList(
    MethodDecl(public_static_void main
     AbstractList(
      Formal(ArrayType(IdentifierType(String)) a))
     AbstractList()
     AbstractList(
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         NewObjectExpr(IdentifierType(LL))
         Start
         AbstractList()
         0))))
     IntegerLiteral(0)
     FUNCTION(main
      OBJECT(LinkedList)
      RECORD(
       FIELD(0 a
        ARRAY(
         OBJECT(String))))
      VOID)))
   CLASS(LinkedList
    null
    RECORD(
     FIELD(0 main
      FUNCTION(main
       OBJECT(LinkedList)
       RECORD(
        FIELD(0 a
         ARRAY(
          OBJECT(String))))
       VOID)))
    RECORD()
    OBJECT(LinkedList
     RECORD(
      FIELD(0 main
       FUNCTION(main
        OBJECT(LinkedList)
        RECORD(
         FIELD(0 a
          ARRAY(
           OBJECT(String))))
        VOID)))
     RECORD())))
  ClassDecl(Element null
   AbstractList(
    VarDecl(IntegerType Age null 
     INT)
    VarDecl(IntegerType Salary null 
     INT)
    VarDecl(BooleanType Married null 
     BOOLEAN))
   AbstractList(
    MethodDecl(BooleanType Init
     AbstractList(
      Formal(IntegerType v_Age)
      Formal(IntegerType v_Salary)
      Formal(BooleanType v_Married))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(Age)
       IdentifierExpr(v_Age))
      AssignStmt(
       IdentifierExpr(Salary)
       IdentifierExpr(v_Salary))
      AssignStmt(
       IdentifierExpr(Married)
       IdentifierExpr(v_Married)))
     TrueExpr
     FUNCTION(Init
      OBJECT(Element)
      RECORD(
       FIELD(0 v_Age
        INT)
       FIELD(1 v_Salary
        INT)
       FIELD(2 v_Married
        BOOLEAN))
      BOOLEAN))
    MethodDecl(IntegerType GetAge
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Age)
     FUNCTION(GetAge
      OBJECT(Element)
      RECORD()
      INT))
    MethodDecl(IntegerType GetSalary
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Salary)
     FUNCTION(GetSalary
      OBJECT(Element)
      RECORD()
      INT))
    MethodDecl(BooleanType GetMarried
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Married)
     FUNCTION(GetMarried
      OBJECT(Element)
      RECORD()
      BOOLEAN))
    MethodDecl(BooleanType Equal
     AbstractList(
      Formal(IdentifierType(Element) other))
     AbstractList(
      VarDecl(BooleanType ret_val null 
       BOOLEAN)
      VarDecl(IntegerType aux01 null 
       INT)
      VarDecl(IntegerType aux02 null 
       INT)
      VarDecl(IntegerType nt null 
       INT))
     AbstractList(
      AssignStmt(
       IdentifierExpr(ret_val)
       TrueExpr)
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(other)
        GetAge
        AbstractList()
        1))
      IfStmt(
       NotExpr(
        CallExpr(
         ThisExpr
         Compare
         AbstractList(
          IdentifierExpr(aux01)
          IdentifierExpr(Age))
         5))
       AssignStmt(
        IdentifierExpr(ret_val)
        FalseExpr)
       BlockStmt(
        AbstractList(
         AssignStmt(
          IdentifierExpr(aux02)
          CallExpr(
           IdentifierExpr(other)
           GetSalary
           AbstractList()
           2))
         IfStmt(
          NotExpr(
           CallExpr(
            ThisExpr
            Compare
            AbstractList(
             IdentifierExpr(aux02)
             IdentifierExpr(Salary))
            5))
          AssignStmt(
           IdentifierExpr(ret_val)
           FalseExpr)
          IfStmt(
           IdentifierExpr(Married)
           IfStmt(
            NotExpr(
             CallExpr(
              IdentifierExpr(other)
              GetMarried
              AbstractList()
              3))
            AssignStmt(
             IdentifierExpr(ret_val)
             FalseExpr)
            AssignStmt(
             IdentifierExpr(nt)
             IntegerLiteral(0)))
           IfStmt(
            CallExpr(
             IdentifierExpr(other)
             GetMarried
             AbstractList()
             3)
            AssignStmt(
             IdentifierExpr(ret_val)
             FalseExpr)
            AssignStmt(
             IdentifierExpr(nt)
             IntegerLiteral(0)))))))))
     IdentifierExpr(ret_val)
     FUNCTION(Equal
      OBJECT(Element)
      RECORD(
       FIELD(0 other
        OBJECT(Element)))
      BOOLEAN))
    MethodDecl(BooleanType Compare
     AbstractList(
      Formal(IntegerType num1)
      Formal(IntegerType num2))
     AbstractList(
      VarDecl(BooleanType retval null 
       BOOLEAN)
      VarDecl(IntegerType aux02 null 
       INT))
     AbstractList(
      AssignStmt(
       IdentifierExpr(retval)
       FalseExpr)
      AssignStmt(
       IdentifierExpr(aux02)
       AddExpr(
        IdentifierExpr(num2)
        IntegerLiteral(1)))
      IfStmt(
       LesserExpr(
        IdentifierExpr(num1)
        IdentifierExpr(num2))
       AssignStmt(
        IdentifierExpr(retval)
        FalseExpr)
       IfStmt(
        NotExpr(
         LesserExpr(
          IdentifierExpr(num1)
          IdentifierExpr(aux02)))
        AssignStmt(
         IdentifierExpr(retval)
         FalseExpr)
        AssignStmt(
         IdentifierExpr(retval)
         TrueExpr))))
     IdentifierExpr(retval)
     FUNCTION(Compare
      OBJECT(Element)
      RECORD(
       FIELD(0 num1
        INT)
       FIELD(1 num2
        INT))
      BOOLEAN)))
   CLASS(Element
    null
    RECORD(
     FIELD(0 Init
      FUNCTION(Init
       OBJECT(Element)
       RECORD(
        FIELD(0 v_Age
         INT)
        FIELD(1 v_Salary
         INT)
        FIELD(2 v_Married
         BOOLEAN))
       BOOLEAN))
     FIELD(1 GetAge
      FUNCTION(GetAge
       OBJECT(Element)
       RECORD()
       INT))
     FIELD(2 GetSalary
      FUNCTION(GetSalary
       OBJECT(Element)
       RECORD()
       INT))
     FIELD(3 GetMarried
      FUNCTION(GetMarried
       OBJECT(Element)
       RECORD()
       BOOLEAN))
     FIELD(4 Equal
      FUNCTION(Equal
       OBJECT(Element)
       RECORD(
        FIELD(0 other
         OBJECT(Element)))
       BOOLEAN))
     FIELD(5 Compare
      FUNCTION(Compare
       OBJECT(Element)
       RECORD(
        FIELD(0 num1
         INT)
        FIELD(1 num2
         INT))
       BOOLEAN)))
    RECORD(
     FIELD(0 Age
      INT)
     FIELD(1 Salary
      INT)
     FIELD(2 Married
      BOOLEAN))
    OBJECT(Element
     RECORD(
      FIELD(0 Init
       FUNCTION(Init
        OBJECT(Element)
        RECORD(
         FIELD(0 v_Age
          INT)
         FIELD(1 v_Salary
          INT)
         FIELD(2 v_Married
          BOOLEAN))
        BOOLEAN))
      FIELD(1 GetAge
       FUNCTION(GetAge
        OBJECT(Element)
        RECORD()
        INT))
      FIELD(2 GetSalary
       FUNCTION(GetSalary
        OBJECT(Element)
        RECORD()
        INT))
      FIELD(3 GetMarried
       FUNCTION(GetMarried
        OBJECT(Element)
        RECORD()
        BOOLEAN))
      FIELD(4 Equal
       FUNCTION(Equal
        OBJECT(Element)
        RECORD(
         FIELD(0 other
          OBJECT(Element)))
        BOOLEAN))
      FIELD(5 Compare
       FUNCTION(Compare
        OBJECT(Element)
        RECORD(
         FIELD(0 num1
          INT)
         FIELD(1 num2
          INT))
        BOOLEAN)))
     RECORD(
      FIELD(0 Age
       INT)
      FIELD(1 Salary
       INT)
      FIELD(2 Married
       BOOLEAN)))))
  ClassDecl(List null
   AbstractList(
    VarDecl(IdentifierType(Element) elem null 
     OBJECT(Element))
    VarDecl(IdentifierType(List) next null 
     OBJECT(List))
    VarDecl(BooleanType end null 
     BOOLEAN))
   AbstractList(
    MethodDecl(BooleanType Init
     AbstractList()
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(end)
       TrueExpr))
     TrueExpr
     FUNCTION(Init
      OBJECT(List)
      RECORD()
      BOOLEAN))
    MethodDecl(BooleanType InitNew
     AbstractList(
      Formal(IdentifierType(Element) v_elem)
      Formal(IdentifierType(List) v_next)
      Formal(BooleanType v_end))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(end)
       IdentifierExpr(v_end))
      AssignStmt(
       IdentifierExpr(elem)
       IdentifierExpr(v_elem))
      AssignStmt(
       IdentifierExpr(next)
       IdentifierExpr(v_next)))
     TrueExpr
     FUNCTION(InitNew
      OBJECT(List)
      RECORD(
       FIELD(0 v_elem
        OBJECT(Element))
       FIELD(1 v_next
        OBJECT(List))
       FIELD(2 v_end
        BOOLEAN))
      BOOLEAN))
    MethodDecl(IdentifierType(List) Insert
     AbstractList(
      Formal(IdentifierType(Element) new_elem))
     AbstractList(
      VarDecl(BooleanType ret_val null 
       BOOLEAN)
      VarDecl(IdentifierType(List) aux03 null 
       OBJECT(List))
      VarDecl(IdentifierType(List) aux02 null 
       OBJECT(List)))
     AbstractList(
      AssignStmt(
       IdentifierExpr(aux03)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(aux02)
       NewObjectExpr(IdentifierType(List)))
      AssignStmt(
       IdentifierExpr(ret_val)
       CallExpr(
        IdentifierExpr(aux02)
        InitNew
        AbstractList(
         IdentifierExpr(new_elem)
         IdentifierExpr(aux03)
         FalseExpr)
        1)))
     IdentifierExpr(aux02)
     FUNCTION(Insert
      OBJECT(List)
      RECORD(
       FIELD(0 new_elem
        OBJECT(Element)))
      OBJECT(List)))
    MethodDecl(BooleanType SetNext
     AbstractList(
      Formal(IdentifierType(List) v_next))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(next)
       IdentifierExpr(v_next)))
     TrueExpr
     FUNCTION(SetNext
      OBJECT(List)
      RECORD(
       FIELD(0 v_next
        OBJECT(List)))
      BOOLEAN))
    MethodDecl(IdentifierType(List) Delete
     AbstractList(
      Formal(IdentifierType(Element) e))
     AbstractList(
      VarDecl(IdentifierType(List) my_head null 
       OBJECT(List))
      VarDecl(BooleanType ret_val null 
       BOOLEAN)
      VarDecl(BooleanType aux05 null 
       BOOLEAN)
      VarDecl(IdentifierType(List) aux01 null 
       OBJECT(List))
      VarDecl(IdentifierType(List) prev null 
       OBJECT(List))
      VarDecl(BooleanType var_end null 
       BOOLEAN)
      VarDecl(IdentifierType(Element) var_elem null 
       OBJECT(Element))
      VarDecl(IntegerType aux04 null 
       INT)
      VarDecl(IntegerType nt null 
       INT))
     AbstractList(
      AssignStmt(
       IdentifierExpr(my_head)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(ret_val)
       FalseExpr)
      AssignStmt(
       IdentifierExpr(aux04)
       SubExpr(
        IntegerLiteral(0)
        IntegerLiteral(1)))
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(prev)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       AndExpr(
        NotExpr(
         IdentifierExpr(var_end))
        NotExpr(
         IdentifierExpr(ret_val)))
       BlockStmt(
        AbstractList(
         IfStmt(
          CallExpr(
           IdentifierExpr(e)
           Equal
           AbstractList(
            IdentifierExpr(var_elem))
           4)
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(ret_val)
             TrueExpr)
            IfStmt(
             LesserExpr(
              IdentifierExpr(aux04)
              IntegerLiteral(0))
             BlockStmt(
              AbstractList(
               AssignStmt(
                IdentifierExpr(my_head)
                CallExpr(
                 IdentifierExpr(aux01)
                 GetNext
                 AbstractList()
                 8))))
             BlockStmt(
              AbstractList(
               XinuCallStmt(printint
                AbstractList(
                 SubExpr(
                  IntegerLiteral(0)
                  IntegerLiteral(555))))
               AssignStmt(
                IdentifierExpr(aux05)
                CallExpr(
                 IdentifierExpr(prev)
                 SetNext
                 AbstractList(
                  CallExpr(
                   IdentifierExpr(aux01)
                   GetNext
                   AbstractList()
                   8))
                 3))
               XinuCallStmt(printint
                AbstractList(
                 SubExpr(
                  IntegerLiteral(0)
                  IntegerLiteral(555)))))))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))
         IfStmt(
          NotExpr(
           IdentifierExpr(ret_val))
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(prev)
             IdentifierExpr(aux01))
            AssignStmt(
             IdentifierExpr(aux01)
             CallExpr(
              IdentifierExpr(aux01)
              GetNext
              AbstractList()
              8))
            AssignStmt(
             IdentifierExpr(var_end)
             CallExpr(
              IdentifierExpr(aux01)
              GetEnd
              AbstractList()
              6))
            AssignStmt(
             IdentifierExpr(var_elem)
             CallExpr(
              IdentifierExpr(aux01)
              GetElem
              AbstractList()
              7))
            AssignStmt(
             IdentifierExpr(aux04)
             IntegerLiteral(1))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))))))
     IdentifierExpr(my_head)
     FUNCTION(Delete
      OBJECT(List)
      RECORD(
       FIELD(0 e
        OBJECT(Element)))
      OBJECT(List)))
    MethodDecl(IntegerType Search
     AbstractList(
      Formal(IdentifierType(Element) e))
     AbstractList(
      VarDecl(IntegerType int_ret_val null 
       INT)
      VarDecl(IdentifierType(List) aux01 null 
       OBJECT(List))
      VarDecl(IdentifierType(Element) var_elem null 
       OBJECT(Element))
      VarDecl(BooleanType var_end null 
       BOOLEAN)
      VarDecl(IntegerType nt null 
       INT))
     AbstractList(
      AssignStmt(
       IdentifierExpr(int_ret_val)
       IntegerLiteral(0))
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       NotExpr(
        IdentifierExpr(var_end))
       BlockStmt(
        AbstractList(
         IfStmt(
          CallExpr(
           IdentifierExpr(e)
           Equal
           AbstractList(
            IdentifierExpr(var_elem))
           4)
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(int_ret_val)
             IntegerLiteral(1))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))
         AssignStmt(
          IdentifierExpr(aux01)
          CallExpr(
           IdentifierExpr(aux01)
           GetNext
           AbstractList()
           8))
         AssignStmt(
          IdentifierExpr(var_end)
          CallExpr(
           IdentifierExpr(aux01)
           GetEnd
           AbstractList()
           6))
         AssignStmt(
          IdentifierExpr(var_elem)
          CallExpr(
           IdentifierExpr(aux01)
           GetElem
           AbstractList()
           7))))))
     IdentifierExpr(int_ret_val)
     FUNCTION(Search
      OBJECT(List)
      RECORD(
       FIELD(0 e
        OBJECT(Element)))
      INT))
    MethodDecl(BooleanType GetEnd
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(end)
     FUNCTION(GetEnd
      OBJECT(List)
      RECORD()
      BOOLEAN))
    MethodDecl(IdentifierType(Element) GetElem
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(elem)
     FUNCTION(GetElem
      OBJECT(List)
      RECORD()
      OBJECT(Element)))
    MethodDecl(IdentifierType(List) GetNext
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(next)
     FUNCTION(GetNext
      OBJECT(List)
      RECORD()
      OBJECT(List)))
    MethodDecl(BooleanType Print
     AbstractList()
     AbstractList(
      VarDecl(IdentifierType(List) aux01 null 
       OBJECT(List))
      VarDecl(BooleanType var_end null 
       BOOLEAN)
      VarDecl(IdentifierType(Element) var_elem null 
       OBJECT(Element)))
     AbstractList(
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       NotExpr(
        IdentifierExpr(var_end))
       BlockStmt(
        AbstractList(
         XinuCallStmt(printint
          AbstractList(
           CallExpr(
            IdentifierExpr(var_elem)
            GetAge
            AbstractList()
            1)))
         AssignStmt(
          IdentifierExpr(aux01)
          CallExpr(
           IdentifierExpr(aux01)
           GetNext
           AbstractList()
           8))
         AssignStmt(
          IdentifierExpr(var_end)
          CallExpr(
           IdentifierExpr(aux01)
           GetEnd
           AbstractList()
           6))
         AssignStmt(
          IdentifierExpr(var_elem)
          CallExpr(
           IdentifierExpr(aux01)
           GetElem
           AbstractList()
           7))))))
     TrueExpr
     FUNCTION(Print
      OBJECT(List)
      RECORD()
      BOOLEAN)))
   CLASS(List
    null
    RECORD(
     FIELD(0 Init
      FUNCTION(Init
       OBJECT(List)
       RECORD()
       BOOLEAN))
     FIELD(1 InitNew
      FUNCTION(InitNew
       OBJECT(List)
       RECORD(
        FIELD(0 v_elem
         OBJECT(Element))
        FIELD(1 v_next
         OBJECT(List))
        FIELD(2 v_end
         BOOLEAN))
       BOOLEAN))
     FIELD(2 Insert
      FUNCTION(Insert
       OBJECT(List)
       RECORD(
        FIELD(0 new_elem
         OBJECT(Element)))
       OBJECT(List)))
     FIELD(3 SetNext
      FUNCTION(SetNext
       OBJECT(List)
       RECORD(
        FIELD(0 v_next
         OBJECT(List)))
       BOOLEAN))
     FIELD(4 Delete
      FUNCTION(Delete
       OBJECT(List)
       RECORD(
        FIELD(0 e
         OBJECT(Element)))
       OBJECT(List)))
     FIELD(5 Search
      FUNCTION(Search
       OBJECT(List)
       RECORD(
        FIELD(0 e
         OBJECT(Element)))
       INT))
     FIELD(6 GetEnd
      FUNCTION(GetEnd
       OBJECT(List)
       RECORD()
       BOOLEAN))
     FIELD(7 GetElem
      FUNCTION(GetElem
       OBJECT(List)
       RECORD()
       OBJECT(Element)))
     FIELD(8 GetNext
      FUNCTION(GetNext
       OBJECT(List)
       RECORD()
       OBJECT(List)))
     FIELD(9 Print
      FUNCTION(Print
       OBJECT(List)
       RECORD()
       BOOLEAN)))
    RECORD(
     FIELD(0 elem
      OBJECT(Element))
     FIELD(1 next
      OBJECT(List))
     FIELD(2 end
      BOOLEAN))
    OBJECT(List
     RECORD(
      FIELD(0 Init
       FUNCTION(Init
        OBJECT(List)
        RECORD()
        BOOLEAN))
      FIELD(1 InitNew
       FUNCTION(InitNew
        OBJECT(List)
        RECORD(
         FIELD(0 v_elem
          OBJECT(Element))
         FIELD(1 v_next
          OBJECT(List))
         FIELD(2 v_end
          BOOLEAN))
        BOOLEAN))
      FIELD(2 Insert
       FUNCTION(Insert
        OBJECT(List)
        RECORD(
         FIELD(0 new_elem
          OBJECT(Element)))
        OBJECT(List)))
      FIELD(3 SetNext
       FUNCTION(SetNext
        OBJECT(List)
        RECORD(
         FIELD(0 v_next
          OBJECT(List)))
        BOOLEAN))
      FIELD(4 Delete
       FUNCTION(Delete
        OBJECT(List)
        RECORD(
         FIELD(0 e
          OBJECT(Element)))
        OBJECT(List)))
      FIELD(5 Search
       FUNCTION(Search
        OBJECT(List)
        RECORD(
         FIELD(0 e
          OBJECT(Element)))
        INT))
      FIELD(6 GetEnd
       FUNCTION(GetEnd
        OBJECT(List)
        RECORD()
        BOOLEAN))
      FIELD(7 GetElem
       FUNCTION(GetElem
        OBJECT(List)
        RECORD()
        OBJECT(Element)))
      FIELD(8 GetNext
       FUNCTION(GetNext
        OBJECT(List)
        RECORD()
        OBJECT(List)))
      FIELD(9 Print
       FUNCTION(Print
        OBJECT(List)
        RECORD()
        BOOLEAN)))
     RECORD(
      FIELD(0 elem
       OBJECT(Element))
      FIELD(1 next
       OBJECT(List))
      FIELD(2 end
       BOOLEAN)))))
  ClassDecl(LL null
   AbstractList()
   AbstractList(
    MethodDecl(IntegerType Start
     AbstractList()
     AbstractList(
      VarDecl(IdentifierType(List) head null 
       OBJECT(List))
      VarDecl(IdentifierType(List) last_elem null 
       OBJECT(List))
      VarDecl(BooleanType aux01 null 
       BOOLEAN)
      VarDecl(IdentifierType(Element) el01 null 
       OBJECT(Element))
      VarDecl(IdentifierType(Element) el02 null 
       OBJECT(Element))
      VarDecl(IdentifierType(Element) el03 null 
       OBJECT(Element)))
     AbstractList(
      AssignStmt(
       IdentifierExpr(last_elem)
       NewObjectExpr(IdentifierType(List)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(last_elem)
        Init
        AbstractList()
        0))
      AssignStmt(
       IdentifierExpr(head)
       IdentifierExpr(last_elem))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Init
        AbstractList()
        0))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(25)
         IntegerLiteral(37000)
         FalseExpr)
        0))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))
        2))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(39)
         IntegerLiteral(42000)
         TrueExpr)
        0))
      AssignStmt(
       IdentifierExpr(el02)
       IdentifierExpr(el01))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))
        2))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(22)
         IntegerLiteral(34000)
         FalseExpr)
        0))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))
        2))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      AssignStmt(
       IdentifierExpr(el03)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el03)
        Init
        AbstractList(
         IntegerLiteral(27)
         IntegerLiteral(34000)
         FalseExpr)
        0))
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         IdentifierExpr(head)
         Search
         AbstractList(
          IdentifierExpr(el02))
         5)))
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         IdentifierExpr(head)
         Search
         AbstractList(
          IdentifierExpr(el03))
         5)))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(28)
         IntegerLiteral(35000)
         FalseExpr)
        0))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))
        2))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(2220000)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Delete
        AbstractList(
         IdentifierExpr(el02))
        4))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(33300000)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Delete
        AbstractList(
         IdentifierExpr(el01))
        4))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()
        9))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(44440000))))
     IntegerLiteral(0)
     FUNCTION(Start
      OBJECT(LL)
      RECORD()
      INT)))
   CLASS(LL
    null
    RECORD(
     FIELD(0 Start
      FUNCTION(Start
       OBJECT(LL)
       RECORD()
       INT)))
    RECORD()
    OBJECT(LL
     RECORD(
      FIELD(0 Start
       FUNCTION(Start
        OBJECT(LL)
        RECORD()
        INT)))
     RECORD())))))
