Program(
 AbstractList(
  ClassDecl(LinkedList null
   AbstractList()
   AbstractList(
    MethodDecl(public_static_void main
     AbstractList(
      Formal(ArrayType(IdentifierType(String)) a))
     AbstractList()
     AbstractList(
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         NewObjectExpr(IdentifierType(LL))
         Start
         AbstractList()))))
     IntegerLiteral(0))))
  ClassDecl(Element null
   AbstractList(
    VarDecl(IntegerType Age null)
    VarDecl(IntegerType Salary null)
    VarDecl(BooleanType Married null))
   AbstractList(
    MethodDecl(BooleanType Init
     AbstractList(
      Formal(IntegerType v_Age)
      Formal(IntegerType v_Salary)
      Formal(BooleanType v_Married))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(Age)
       IdentifierExpr(v_Age))
      AssignStmt(
       IdentifierExpr(Salary)
       IdentifierExpr(v_Salary))
      AssignStmt(
       IdentifierExpr(Married)
       IdentifierExpr(v_Married)))
     TrueExpr)
    MethodDecl(IntegerType GetAge
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Age))
    MethodDecl(IntegerType GetSalary
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Salary))
    MethodDecl(BooleanType GetMarried
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(Married))
    MethodDecl(BooleanType Equal
     AbstractList(
      Formal(IdentifierType(Element) other))
     AbstractList(
      VarDecl(BooleanType ret_val null)
      VarDecl(IntegerType aux01 null)
      VarDecl(IntegerType aux02 null)
      VarDecl(IntegerType nt null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(ret_val)
       TrueExpr)
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(other)
        GetAge
        AbstractList()))
      IfStmt(
       NotExpr(
        CallExpr(
         ThisExpr
         Compare
         AbstractList(
          IdentifierExpr(aux01)
          IdentifierExpr(Age))))
       AssignStmt(
        IdentifierExpr(ret_val)
        FalseExpr)
       BlockStmt(
        AbstractList(
         AssignStmt(
          IdentifierExpr(aux02)
          CallExpr(
           IdentifierExpr(other)
           GetSalary
           AbstractList()))
         IfStmt(
          NotExpr(
           CallExpr(
            ThisExpr
            Compare
            AbstractList(
             IdentifierExpr(aux02)
             IdentifierExpr(Salary))))
          AssignStmt(
           IdentifierExpr(ret_val)
           FalseExpr)
          IfStmt(
           IdentifierExpr(Married)
           IfStmt(
            NotExpr(
             CallExpr(
              IdentifierExpr(other)
              GetMarried
              AbstractList()))
            AssignStmt(
             IdentifierExpr(ret_val)
             FalseExpr)
            AssignStmt(
             IdentifierExpr(nt)
             IntegerLiteral(0)))
           IfStmt(
            CallExpr(
             IdentifierExpr(other)
             GetMarried
             AbstractList())
            AssignStmt(
             IdentifierExpr(ret_val)
             FalseExpr)
            AssignStmt(
             IdentifierExpr(nt)
             IntegerLiteral(0)))))))))
     IdentifierExpr(ret_val))
    MethodDecl(BooleanType Compare
     AbstractList(
      Formal(IntegerType num1)
      Formal(IntegerType num2))
     AbstractList(
      VarDecl(BooleanType retval null)
      VarDecl(IntegerType aux02 null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(retval)
       FalseExpr)
      AssignStmt(
       IdentifierExpr(aux02)
       AddExpr(
        IdentifierExpr(num2)
        IntegerLiteral(1)))
      IfStmt(
       LesserExpr(
        IdentifierExpr(num1)
        IdentifierExpr(num2))
       AssignStmt(
        IdentifierExpr(retval)
        FalseExpr)
       IfStmt(
        NotExpr(
         LesserExpr(
          IdentifierExpr(num1)
          IdentifierExpr(aux02)))
        AssignStmt(
         IdentifierExpr(retval)
         FalseExpr)
        AssignStmt(
         IdentifierExpr(retval)
         TrueExpr))))
     IdentifierExpr(retval))))
  ClassDecl(List null
   AbstractList(
    VarDecl(IdentifierType(Element) elem null)
    VarDecl(IdentifierType(List) next null)
    VarDecl(BooleanType end null))
   AbstractList(
    MethodDecl(BooleanType Init
     AbstractList()
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(end)
       TrueExpr))
     TrueExpr)
    MethodDecl(BooleanType InitNew
     AbstractList(
      Formal(IdentifierType(Element) v_elem)
      Formal(IdentifierType(List) v_next)
      Formal(BooleanType v_end))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(end)
       IdentifierExpr(v_end))
      AssignStmt(
       IdentifierExpr(elem)
       IdentifierExpr(v_elem))
      AssignStmt(
       IdentifierExpr(next)
       IdentifierExpr(v_next)))
     TrueExpr)
    MethodDecl(IdentifierType(List) Insert
     AbstractList(
      Formal(IdentifierType(Element) new_elem))
     AbstractList(
      VarDecl(BooleanType ret_val null)
      VarDecl(IdentifierType(List) aux03 null)
      VarDecl(IdentifierType(List) aux02 null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(aux03)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(aux02)
       NewObjectExpr(IdentifierType(List)))
      AssignStmt(
       IdentifierExpr(ret_val)
       CallExpr(
        IdentifierExpr(aux02)
        InitNew
        AbstractList(
         IdentifierExpr(new_elem)
         IdentifierExpr(aux03)
         FalseExpr))))
     IdentifierExpr(aux02))
    MethodDecl(BooleanType SetNext
     AbstractList(
      Formal(IdentifierType(List) v_next))
     AbstractList()
     AbstractList(
      AssignStmt(
       IdentifierExpr(next)
       IdentifierExpr(v_next)))
     TrueExpr)
    MethodDecl(IdentifierType(List) Delete
     AbstractList(
      Formal(IdentifierType(Element) e))
     AbstractList(
      VarDecl(IdentifierType(List) my_head null)
      VarDecl(BooleanType ret_val null)
      VarDecl(BooleanType aux05 null)
      VarDecl(IdentifierType(List) aux01 null)
      VarDecl(IdentifierType(List) prev null)
      VarDecl(BooleanType var_end null)
      VarDecl(IdentifierType(Element) var_elem null)
      VarDecl(IntegerType aux04 null)
      VarDecl(IntegerType nt null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(my_head)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(ret_val)
       FalseExpr)
      AssignStmt(
       IdentifierExpr(aux04)
       SubExpr(
        IntegerLiteral(0)
        IntegerLiteral(1)))
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(prev)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       AndExpr(
        NotExpr(
         IdentifierExpr(var_end))
        NotExpr(
         IdentifierExpr(ret_val)))
       BlockStmt(
        AbstractList(
         IfStmt(
          CallExpr(
           IdentifierExpr(e)
           Equal
           AbstractList(
            IdentifierExpr(var_elem)))
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(ret_val)
             TrueExpr)
            IfStmt(
             LesserExpr(
              IdentifierExpr(aux04)
              IntegerLiteral(0))
             BlockStmt(
              AbstractList(
               AssignStmt(
                IdentifierExpr(my_head)
                CallExpr(
                 IdentifierExpr(aux01)
                 GetNext
                 AbstractList()))))
             BlockStmt(
              AbstractList(
               XinuCallStmt(printint
                AbstractList(
                 SubExpr(
                  IntegerLiteral(0)
                  IntegerLiteral(555))))
               AssignStmt(
                IdentifierExpr(aux05)
                CallExpr(
                 IdentifierExpr(prev)
                 SetNext
                 AbstractList(
                  CallExpr(
                   IdentifierExpr(aux01)
                   GetNext
                   AbstractList()))))
               XinuCallStmt(printint
                AbstractList(
                 SubExpr(
                  IntegerLiteral(0)
                  IntegerLiteral(555)))))))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))
         IfStmt(
          NotExpr(
           IdentifierExpr(ret_val))
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(prev)
             IdentifierExpr(aux01))
            AssignStmt(
             IdentifierExpr(aux01)
             CallExpr(
              IdentifierExpr(aux01)
              GetNext
              AbstractList()))
            AssignStmt(
             IdentifierExpr(var_end)
             CallExpr(
              IdentifierExpr(aux01)
              GetEnd
              AbstractList()))
            AssignStmt(
             IdentifierExpr(var_elem)
             CallExpr(
              IdentifierExpr(aux01)
              GetElem
              AbstractList()))
            AssignStmt(
             IdentifierExpr(aux04)
             IntegerLiteral(1))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))))))
     IdentifierExpr(my_head))
    MethodDecl(IntegerType Search
     AbstractList(
      Formal(IdentifierType(Element) e))
     AbstractList(
      VarDecl(IntegerType int_ret_val null)
      VarDecl(IdentifierType(List) aux01 null)
      VarDecl(IdentifierType(Element) var_elem null)
      VarDecl(BooleanType var_end null)
      VarDecl(IntegerType nt null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(int_ret_val)
       IntegerLiteral(0))
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       NotExpr(
        IdentifierExpr(var_end))
       BlockStmt(
        AbstractList(
         IfStmt(
          CallExpr(
           IdentifierExpr(e)
           Equal
           AbstractList(
            IdentifierExpr(var_elem)))
          BlockStmt(
           AbstractList(
            AssignStmt(
             IdentifierExpr(int_ret_val)
             IntegerLiteral(1))))
          AssignStmt(
           IdentifierExpr(nt)
           IntegerLiteral(0)))
         AssignStmt(
          IdentifierExpr(aux01)
          CallExpr(
           IdentifierExpr(aux01)
           GetNext
           AbstractList()))
         AssignStmt(
          IdentifierExpr(var_end)
          CallExpr(
           IdentifierExpr(aux01)
           GetEnd
           AbstractList()))
         AssignStmt(
          IdentifierExpr(var_elem)
          CallExpr(
           IdentifierExpr(aux01)
           GetElem
           AbstractList()))))))
     IdentifierExpr(int_ret_val))
    MethodDecl(BooleanType GetEnd
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(end))
    MethodDecl(IdentifierType(Element) GetElem
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(elem))
    MethodDecl(IdentifierType(List) GetNext
     AbstractList()
     AbstractList()
     AbstractList()
     IdentifierExpr(next))
    MethodDecl(BooleanType Print
     AbstractList()
     AbstractList(
      VarDecl(IdentifierType(List) aux01 null)
      VarDecl(BooleanType var_end null)
      VarDecl(IdentifierType(Element) var_elem null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(aux01)
       ThisExpr)
      AssignStmt(
       IdentifierExpr(var_end)
       IdentifierExpr(end))
      AssignStmt(
       IdentifierExpr(var_elem)
       IdentifierExpr(elem))
      WhileStmt(
       NotExpr(
        IdentifierExpr(var_end))
       BlockStmt(
        AbstractList(
         XinuCallStmt(printint
          AbstractList(
           CallExpr(
            IdentifierExpr(var_elem)
            GetAge
            AbstractList())))
         AssignStmt(
          IdentifierExpr(aux01)
          CallExpr(
           IdentifierExpr(aux01)
           GetNext
           AbstractList()))
         AssignStmt(
          IdentifierExpr(var_end)
          CallExpr(
           IdentifierExpr(aux01)
           GetEnd
           AbstractList()))
         AssignStmt(
          IdentifierExpr(var_elem)
          CallExpr(
           IdentifierExpr(aux01)
           GetElem
           AbstractList()))))))
     TrueExpr)))
  ClassDecl(LL null
   AbstractList()
   AbstractList(
    MethodDecl(IntegerType Start
     AbstractList()
     AbstractList(
      VarDecl(IdentifierType(List) head null)
      VarDecl(IdentifierType(List) last_elem null)
      VarDecl(BooleanType aux01 null)
      VarDecl(IdentifierType(Element) el01 null)
      VarDecl(IdentifierType(Element) el02 null)
      VarDecl(IdentifierType(Element) el03 null))
     AbstractList(
      AssignStmt(
       IdentifierExpr(last_elem)
       NewObjectExpr(IdentifierType(List)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(last_elem)
        Init
        AbstractList()))
      AssignStmt(
       IdentifierExpr(head)
       IdentifierExpr(last_elem))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Init
        AbstractList()))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(25)
         IntegerLiteral(37000)
         FalseExpr)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(39)
         IntegerLiteral(42000)
         TrueExpr)))
      AssignStmt(
       IdentifierExpr(el02)
       IdentifierExpr(el01))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(22)
         IntegerLiteral(34000)
         FalseExpr)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      AssignStmt(
       IdentifierExpr(el03)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el03)
        Init
        AbstractList(
         IntegerLiteral(27)
         IntegerLiteral(34000)
         FalseExpr)))
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         IdentifierExpr(head)
         Search
         AbstractList(
          IdentifierExpr(el02)))))
      XinuCallStmt(printint
       AbstractList(
        CallExpr(
         IdentifierExpr(head)
         Search
         AbstractList(
          IdentifierExpr(el03)))))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(10000000)))
      AssignStmt(
       IdentifierExpr(el01)
       NewObjectExpr(IdentifierType(Element)))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(el01)
        Init
        AbstractList(
         IntegerLiteral(28)
         IntegerLiteral(35000)
         FalseExpr)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Insert
        AbstractList(
         IdentifierExpr(el01))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(2220000)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Delete
        AbstractList(
         IdentifierExpr(el02))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(33300000)))
      AssignStmt(
       IdentifierExpr(head)
       CallExpr(
        IdentifierExpr(head)
        Delete
        AbstractList(
         IdentifierExpr(el01))))
      AssignStmt(
       IdentifierExpr(aux01)
       CallExpr(
        IdentifierExpr(head)
        Print
        AbstractList()))
      XinuCallStmt(printint
       AbstractList(
        IntegerLiteral(44440000))))
     IntegerLiteral(0))))))
